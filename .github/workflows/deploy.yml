# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [feature/live-preview]
  pull_request:
    branches: [feature/live-preview]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

   
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
      # - name: Setup Pages
      #   uses: actions/configure-pages@v4
      #   with:
      #     # Automatically inject basePath in your Next.js configuration file and disable
      #     # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
      #     #
      #     # You may remove this line if you want to manage the configuration yourself.
      #     static_site_generator: next
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
      - name: Install dependencies
        run: pnpm i
      - name: Run lint
        run: |
          touch .env.local
          echo REMOTE_IMAGE_HOSTNAME=${{ secrets.REMOTE_IMAGE_HOSTNAME }} >> .env.local
          echo REMOTE_IMAGE_PATHNAME=${{ secrets.REMOTE_IMAGE_PATHNAME }} >> .env.local
          pnpm lint
      - name: Build with Next.js
        run: pnpm next build
